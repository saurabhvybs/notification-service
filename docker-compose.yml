version: '3.8'

services:
  ### ðŸ”¹ PostgreSQL Database
  postgres_db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: notifications_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  ### ðŸ”¹ Redis
  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network

  ### ðŸ”¹ Kafka Broker (Using KRaft Mode - No Zookeeper)
  kafka_broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_broker
    restart: always
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka_broker:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka_broker:9092"
      KAFKA_LISTENERS: "PLAINTEXT://kafka_broker:9092,CONTROLLER://kafka_broker:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      CLUSTER_ID: "P-BE5-eBSGuKe_E_6i7RZA"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - app_network

  ### ðŸ”¹ Notification Service
  notification_service:
    build:
      context: .
      dockerfile: Notification_server/Dockerfile
    container_name: notification_service
    restart: always
    depends_on:
      - kafka_broker
      - postgres_db
      - redis
    environment:
      KAFKA_BROKER_URL: kafka_broker:9092
      DATABASE_URL: postgres://admin:secret@postgres_db:5432/notifications_db
      REDIS_HOST: redis
    networks:
      - app_network

  ### ðŸ”¹ Kafka Workers
  kafka_workers:
    build:
      context: .
      dockerfile: Kafka_workers/Dockerfile
    container_name: kafka_workers
    restart: always
    depends_on:
      - kafka_broker
    environment:
      KAFKA_BROKER_URL: kafka_broker:9092
    networks:
      - app_network

volumes:
  postgres_data:
  kafka_data:

networks:
  app_network:
    driver: bridge
